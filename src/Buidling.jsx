
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 original.glb --transform
Files: original.glb [7.65MB] > original-transformed.glb [2.31MB] (70%)
*/
import { Stats, OrbitControls, useGLTF } from "@react-three/drei";
import React, { useRef, useEffect } from "react";

import * as THREE from 'three'



export function Building({ controls, areas, props }){
	const { nodes, materials } = useGLTF('/yongin_compressed_400-transformed.glb')
	return (
		<group {...props} dispose={null}>
			<mesh geometry={nodes.Tile_1_1.geometry} material={materials.Tile_1_0} />
			<mesh geometry={nodes.Tile_1_2.geometry} material={materials.Tile_2_0} />
			<mesh geometry={nodes.Tile_1_3.geometry} material={materials.Tile_3_0} />
			<mesh geometry={nodes.Tile_1_4.geometry} material={materials.Tile_4_0} />
			<mesh geometry={nodes.Tile_1_5.geometry} material={materials.Tile_4_1} />
			<mesh geometry={nodes.Tile_1_6.geometry} material={materials.Tile_5_0} />
			<mesh geometry={nodes.Tile_1_7.geometry} material={materials.Tile_5_1} />
			<mesh geometry={nodes.Tile_1_8.geometry} material={materials.Tile_6_0} />
			<mesh geometry={nodes.Tile_1_9.geometry} material={materials.Tile_7_0} />
			<mesh geometry={nodes.Tile_1_10.geometry} material={materials.Tile_7_1} />
			<mesh geometry={nodes.Tile_1_11.geometry} material={materials.Tile_8_0} />
			<mesh geometry={nodes.Tile_1_12.geometry} material={materials.Tile_8_1} />
			<mesh geometry={nodes.Tile_1_13.geometry} material={materials.Tile_9_0} />
			<mesh geometry={nodes.Tile_1_14.geometry} material={materials.Tile_9_1} />
			<mesh geometry={nodes.Tile_1_15.geometry} material={materials.Tile_9_2} />
			<mesh geometry={nodes.Tile_1_16.geometry} material={materials.Tile_10_0} />
			<mesh geometry={nodes.Tile_1_17.geometry} material={materials.Tile_10_1} />
			<mesh geometry={nodes.Tile_1_18.geometry} material={materials.Tile_11_0} />
			<mesh geometry={nodes.Tile_1_19.geometry} material={materials.Tile_12_0} />
			<mesh geometry={nodes.Tile_1_20.geometry} material={materials.Tile_12_1} />
			<mesh geometry={nodes.Tile_1_21.geometry} material={materials.Tile_13_0} />
			<mesh geometry={nodes.Tile_1_22.geometry} material={materials.Tile_14_0} />
			<mesh geometry={nodes.Tile_1_23.geometry} material={materials.Tile_14_1} />
			<mesh geometry={nodes.Tile_1_24.geometry} material={materials.Tile_15_0} />
			<mesh geometry={nodes.Tile_1_25.geometry} material={materials.Tile_15_1} />
			<mesh geometry={nodes.Tile_1_26.geometry} material={materials.Tile_15_2} />
			<mesh geometry={nodes.Tile_1_27.geometry} material={materials.Tile_16_0} />
			<mesh geometry={nodes.Tile_1_28.geometry} material={materials.Tile_16_1} />
			<mesh geometry={nodes.Tile_1_29.geometry} material={materials.Tile_17_0} />
			<mesh geometry={nodes.Tile_1_30.geometry} material={materials.Tile_17_1} />
			<mesh geometry={nodes.Tile_1_31.geometry} material={materials.Tile_18_0} />
		</group>
	)
}

useGLTF.preload('/yongin_compressed_400-transformed.glb')


//      <mesh geometry={nodes.Tile_1.geometry} material={materials.Material_0} position={[0.283, 5.274, 1.352]} />
//      <mesh geometry={nodes.Tile_1.geometry} material={materials.Material_0} position={[4.04, 75.31272, 19.30656]} />

//x : 4.04
//y : 75.31272
//z : 19.30656

//tile1
//x: 17.2948 m   / 14.27   = 1.211969166082691
//y : 8.52379 m /  14.27   = 0.5973
//z : 4.27581 m / 14.27   =  0.2996

//setLootAt
//position
// x: 3 , y : 2 , z:3

//
//
// export function Building({ controls, areas, props }) {
// 	//const { scene } = useGLTF("/all-transformed.glb");
//
// 	const { nodes, materials } = useGLTF('/all_edited-transformed.glb')
//
//
// 	const modelRef = useRef();
//
// 	useEffect(() => {
// 		if (modelRef.current) {
// 			const bbox = new THREE.Box3().setFromObject(modelRef.current);
// 			const dimensions = new THREE.Vector3();
// 			bbox.getSize(dimensions);
//
// 			console.log('Model Dimensions (x, y, z):', dimensions.x, dimensions.y, dimensions.z);
// 		}
// 	}, []);
//
// 	// return (
// 	// 	<primitive
// 	// 		object={scene.children[0]}
// 	// 		castShadow
// 	// 		receiveShadow
// 	// 		material-envMapIntensity={0.4}
// 	// 		ref={modelRef}
// 	// 	/>
// 	// );
//
// 	return (
// 		<group {...props} dispose={null}>
// 			<mesh geometry={nodes.Tile_1.geometry} material={materials.Material_0} position={[0.283, 5.274, 1.352]} ref={modelRef}/>
// 		</group>
// 	)
// }
//
// useGLTF.preload('/all_edited-transformed.glb')

//      <mesh geometry={nodes.Tile_1.geometry} material={materials.Material_0} position={[0.283, 5.274, 1.352]} />
//      <mesh geometry={nodes.Tile_1.geometry} material={materials.Material_0} position={[4.04, 75.31272, 19.30656]} />

//x : 4.04
//y : 75.31272
//z : 19.30656

//tile1
//x: 17.2948 m   / 14.27   = 1.211969166082691
//y : 8.52379 m /  14.27   = 0.5973
//z : 4.27581 m / 14.27   =  0.2996

//setLootAt
//position
// x: 3 , y : 2 , z:3
