<<<<<<< HEAD:src/repairArea.jsx
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 1.glb --transform
Files: 1.glb [4.54MB] > 1-transformed.glb [1.47MB] (68%)
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'

export function RepairArea({ showModel, path, crackParam, title }) {
  const { nodes, materials } = useGLTF(path)
  useEffect(() => {
    console.log('threejs:', nodes[title])
  }, [])
  return (
    <group dispose={null}>
      <mesh
        onClick={(e) => {
          showModel(crackParam)
          console.log(e.point)
        }}
        geometry={nodes[title].geometry}
        material={materials.Material_0}>
        <meshPhongMaterial color={new THREE.Color('red')} shininess={0} />
      </mesh>
    </group>
  )
}
=======
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 1.glb --transform
Files: 1.glb [4.54MB] > 1-transformed.glb [1.47MB] (68%)
*/

import React, { useRef, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
import { modelPath } from './config'

export function ProblemAreas({ showPopup, glb_filename, image_filename, mesh_name , material_name}) {


	const { nodes, materials } = useGLTF(`/${modelPath}/` + glb_filename);

	useEffect(() => {
		console.log("threejs:", nodes);
	}, []);

	return (
		<group dispose={null}>
			<mesh
				onClick={(e) => {showPopup(image_filename)
					console.log(e.point);
				}
			}
				geometry={nodes[mesh_name].geometry}
				material={materials[material_name]}
			>
				<meshPhongMaterial color={new THREE.Color('red')} shininess={0} />
			</mesh>
		</group>
	);
}
>>>>>>> 20e472be9f1ef4c3ddb4ee219f739f2a26fe24c6:src/ProblemAreas.jsx
